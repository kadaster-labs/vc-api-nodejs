openapi: 3.0.0
info:
  title: VC Holder API
  description: "This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/)."
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/vc-api
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  version: 0.0.3-unstable
servers:
  - url: /
tags:
  - name: holder_Credentials
    x-displayName: Credentials
  - name: holder_Presentations
    x-displayName: Presentations
  - name: issuer_Credentials
    x-displayName: Credentials
  - name: verifier_Credentials
    x-displayName: Credentials
  - name: verifier_Presentations
    x-displayName: Presentations
paths:
  /credentials/{id}:
    get:
      tags:
        - holder_Credentials
      summary: Gets a credential or verifiable credential by ID
      operationId: getCredential
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/id"
          example:
            - f37e5114-8b4a-11ec-b32e-fbd62b9502c1
            - z4Z1T4HdLdfXCFAhdhzdCqm
            - u7m8_ybOArX-EWeADqWCsIw
      responses:
        "200":
          description: Credential retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "400":
          description: Bad Request
        "401":
          description: Not Authorized
        "410":
          description: Gone! There is no data here
        "418":
          description:
            I'm a teapot - MUST not be returned outside of pre-arranged
            scenarios between both parties
        "500":
          description: Internal Error
        "501":
          description: Not Implemented
      x-swagger-router-controller: HolderCredentials
    delete:
      tags:
        - holder_Credentials
      summary: Deletes a credential or verifiable credential by ID
      operationId: deleteCredential
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/id"
          example:
            - f37e5114-8b4a-11ec-b32e-fbd62b9502c1
            - z4Z1T4HdLdfXCFAhdhzdCqm
            - u7m8_ybOArX-EWeADqWCsIw
      responses:
        "202":
          description:
            Credential deleted - this is a 202 by default as soft deletes
            and processing time are assumed
        "400":
          description: Bad Request
        "401":
          description: Not Authorized
        "410":
          description: Gone! There is no data here
        "500":
          description: Internal Error
        "501":
          description: Not Implemented
      x-swagger-router-controller: HolderCredentials
  /credentials:
    get:
      tags:
        - holder_Credentials
      summary: Gets list of credentials or verifiable credentials
      operationId: getCredentials
      parameters:
        - name: type
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              pattern: (credentials|verifiablecredentials|all)
              type: string
      responses:
        "200":
          description: Credentials retrieved
          content:
            application/json:
              schema:
                type: array
                description: The Credentials
                items:
                  anyOf:
                    - $ref: "#/components/schemas/VerifiableCredential"
                    - $ref: "#/components/schemas/Credential"
                x-content-type: application/json
        "400":
          description: Bad Request
        "401":
          description: Not Authorized
        "410":
          description: Gone! There is no data here
        "500":
          description: Internal Error
        "501":
          description: Not Implemented
      x-swagger-router-controller: HolderCredentials
  /credentials/derive:
    post:
      tags:
        - holder_Credentials
      summary: Derives a credential and returns it in the response body.
      description: Derives a credential and returns it in the response body.
      operationId: deriveCredential
      requestBody:
        description: Parameters for deriving the credential.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeriveCredentialRequest"
      responses:
        "201":
          description: Credential derived successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifiableCredential"
        "400":
          description: Invalid Request
        "500":
          description: Internal Error
        "501":
          description: Not Implemented
      x-swagger-router-controller: HolderCredentials
  /presentations/{id}:
    get:
      tags:
        - holder_Presentations
      summary: Gets a presentation or verifiable presentation by ID
      operationId: getPresentation
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/id"
          example:
            - f37e5114-8b4a-11ec-b32e-fbd62b9502c1
            - z4Z1T4HdLdfXCFAhdhzdCqm
            - u7m8_ybOArX-EWeADqWCsIw
      responses:
        "200":
          description: Credential retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "400":
          description: Bad Request
        "401":
          description: Not Authorized
        "410":
          description: Gone! There is no data here
        "500":
          description: Internal Error
        "501":
          description: Not Implemented
      x-swagger-router-controller: HolderPresentations
    delete:
      tags:
        - holder_Presentations
      summary: Deletes a presentation or verifiable presentation by ID
      operationId: deletePresentation
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            $ref: "#/components/schemas/id"
          example:
            - f37e5114-8b4a-11ec-b32e-fbd62b9502c1
            - z4Z1T4HdLdfXCFAhdhzdCqm
            - u7m8_ybOArX-EWeADqWCsIw
      responses:
        "202":
          description:
            Presentation deleted - this is a 202 by default as soft deletes
            and processing time are assumed
        "400":
          description: Bad Request
        "401":
          description: Not Authorized
        "410":
          description: Gone! There is no data here
        "500":
          description: Internal Error
        "501":
          description: Not Implemented
      x-swagger-router-controller: HolderPresentations
  /presentations:
    get:
      tags:
        - holder_Presentations
      summary: Gets list of presentations or verifiable presentations
      operationId: getPresentations
      parameters:
        - name: type
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              pattern: (presentations|verifiablepresentations|all)
              type: string
      responses:
        "200":
          description: Presentations retrieved
          content:
            application/json:
              schema:
                type: array
                description: The Presentations
                items:
                  anyOf:
                    - $ref: "#/components/schemas/Presentation"
                    - $ref: "#/components/schemas/VerifiablePresentation"
                x-content-type: application/json
        "400":
          description: Bad Request
        "401":
          description: Not Authorized
        "410":
          description: Gone! There is no data here
        "500":
          description: Internal Error
        "501":
          description: Not Implemented
      x-swagger-router-controller: HolderPresentations
  /presentations/prove:
    post:
      tags:
        - holder_Presentations
      summary: Proves a presentation and returns it in the response body.
      description: Proves a presentation and returns it in the response body.
      operationId: provePresentation
      requestBody:
        description: Parameters for proving the presentation.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProvePresentationRequest"
      responses:
        "201":
          description: Presentation successfully proved!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvePresentationResponse"
        "400":
          description: invalid input!
        "500":
          description: error!
      x-swagger-router-controller: HolderPresentations
  /{agency}/credentials/issue:
    post:
      tags:
        - issuer_Credentials
      summary: Issues a credential and returns it in the response body.
      description: Issues a credential and returns it in the response body.
      operationId: issueCredential
      parameters:
        - name: agency
          in: path
          description: The government agency the user requires a VC from
          required: true
          style: simple
          explode: false
          schema:
            type: string
            enum:
              - Kadaster
              - BRP
      requestBody:
        description: Parameters for issuing the credential.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IssueCredentialRequest"
      responses:
        "201":
          description: Credential successfully issued!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IssueCredentialResponse"
        "400":
          description: invalid input!
        "500":
          description: error!
      x-swagger-router-controller: IssuerCredentials
  /credentials/status:
    post:
      tags:
        - issuer_Credentials
      summary: Updates the status of an issued credential
      description: Updates the status of an issued credential.
      operationId: updateCredentialStatus
      requestBody:
        description: Parameters for updating the status of the issued credential.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCredentialStatus"
      responses:
        "200":
          description: Credential status successfully updated
        "400":
          description: Bad Request
        "404":
          description: Credential not found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: IssuerCredentials
  /credentials/verify:
    post:
      tags:
        - verifier_Credentials
      summary:
        Verifies a verifiableCredential and returns a verificationResult in
        the response body.
      description:
        Verifies a verifiableCredential and returns a verificationResult
        in the response body.
      operationId: verifyCredential
      requestBody:
        description: Parameters for verifying a verifiableCredential.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyCredentialRequest"
      responses:
        "200":
          description: Verifiable Credential successfully verified!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationResult"
        "400":
          description: invalid input!
        "500":
          description: error!
      x-swagger-router-controller: VerifierCredentials
  /presentations/verify:
    post:
      tags:
        - verifier_Presentations
      summary:
        Verifies a Presentation with or without proofs attached and returns
        a verificationResult in the response body.
      description:
        "Verifies a verifiablePresentation and returns a verificationResult\
        \ in the response body.  Given the possibility of denial of service, buffer\
        \ overflow, or other style attacks, an implementation is permitted to rate\
        \ limit or restrict requests against this API endpoint to those requests that\
        \ contain only a single credential with a 413 or 429 error code as appropriate."
      operationId: verifyPresentation
      requestBody:
        description: Parameters for verifying a verifiablePresentation.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/presentations_verify_body"
      responses:
        "200":
          description: Verifiable Presentation successfully verified!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationResult"
        "400":
          description: Invalid or malformed input
        "413":
          description: Payload too large
        "429":
          description: Request rate limit exceeded.
        "500":
          description: Internal Server Error
      x-swagger-router-controller: VerifierPresentations
components:
  schemas:
    DeriveCredentialRequest:
      type: object
      properties:
        verifiableCredential:
          $ref: "#/components/schemas/VerifiableCredential"
        frame:
          type: object
          description: A JSON-LD frame used for selective disclosure.
        options:
          $ref: "#/components/schemas/DeriveCredentialOptions"
    DeriveCredentialResponse:
      $ref: "#/components/schemas/VerifiableCredential"
    ProvePresentationRequest:
      type: object
      properties:
        presentation:
          $ref: "#/components/schemas/Presentation"
        options:
          $ref: "#/components/schemas/PresentCredentialOptions"
    ProvePresentationResponse:
      type: object
      properties:
        verifiablePresentation:
          $ref: "#/components/schemas/VerifiablePresentation"
      example:
        verifiablePresentation:
          "@context":
            - https://www.w3.org/2018/credentials/v1
            - https://www.w3.org/2018/credentials/examples/v1
          holder: did:example:123
          type: VerifiablePresentation
          verifiableCredential:
            - "@context":
                - https://www.w3.org/2018/credentials/v1
                - https://www.w3.org/2018/credentials/examples/v1
            - id: http://example.gov/credentials/3732
            - type:
                - VerifiableCredential
                - UniversityDegreeCredential
            - issuer: did:example:123
            - issuanceDate: 2020-03-16T22:37:26.544Z
            - credentialSubject:
                id: did:example:123
                degree:
                  type: BachelorDegree
                  name: Bachelor of Science and Arts
            - proof:
                type: Ed25519Signature2018
                created: 2020-04-02T18:28:08Z
                verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
                proofPurpose: assertionMethod
                jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
          proof:
            type: Ed25519Signature2018
            created: 2020-04-02T18:28:08Z
            verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
            proofPurpose: assertionMethod
            jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    NotifyPresentationAvailableRequest:
      type: object
      properties:
        query:
          $ref: "#/components/schemas/NotifyPresentationAvailableRequest_query"
      example:
        query:
          - type: RequestQueryByFrame
            credentialQuery:
              - type:
                  - VerifiableCredential
                  - CommercialInvoiceCertificate
                reason: Wallet XYZ is ready to selectively disclose new credentials.
    NotifyPresentationAvailableResponse:
      type: object
      properties:
        query:
          type: object
          description: See https://w3c-ccg.github.io/vp-request-spec/#format
        domain:
          type: string
          description: See https://w3id.org/security#domain
        challenge:
          type: string
          description: See https://w3id.org/security#challenge
      example:
        query:
          - type: QueryByFrame
            credentialQuery:
              frame:
                "@context":
                  - https://www.w3.org/2018/credentials/v1
                  - https://w3id.org/traceability/v1
                  - https://w3id.org/bbs/v1
                type:
                  - VerifiableCredential
                  - CommercialInvoiceCertificate
                credentialSubject:
                  "@explicit": true
                  type:
                    - CommercialInvoice
                  purchaseDate: {}
                  destinationCountry: {}
        domain: jobs.example.com
        challenge: 3182bdea-63d9-11ea-b6de-3b7c1404d57f
    ErrorResponse:
      required:
        - id
        - message
      type: object
      properties:
        id:
          pattern: "[a-z0-9\\-]{8,}"
          type: string
        message:
          maxLength: 100
          minLength: 10
          type: string
        details:
          type: object
      description: A response that denotes that an error has occurred.
      example:
        id: invalid-json
        message: The provided JSON data was malformed.
    StorePresentationRequest:
      $ref: "#/components/schemas/VerifiablePresentation"
    VerifiablePresentationRequest:
      type: object
      properties:
        query:
          type: array
          description: A set of one or more queries sent by the requester.
          items:
            $ref: "#/components/schemas/VerifiablePresentationRequest_query"
        challenge:
          type: string
          description:
            "A challenge, intended to prevent replay attacks, provided\
            \ by the requester that is typically expected to be included in the Verifiable\
            \ Presentation response."
        domain:
          type: array
          description:
            "A domain, intended to prevent replay attacks, provided by\
            \ the requester that is typically expected to be included in the Verifiable\
            \ Presentation response."
          items:
            type: string
        interact:
          type: array
          description:
            A list of interaction mechanisms that are supported by the
            server.
          items:
            $ref: "#/components/schemas/VerifiablePresentationRequest_interact"
      description: A Verifiable Presentation Request.
      example:
        query:
          - type: DIDAuthentication
          - type: QueryByExample
            credentialQuery:
              reason: We need to see your existing University Degree credential.
              example:
                "@context":
                  - https://www.w3.org/2018/credentials/v1
                  - https://www.w3.org/2018/credentials/examples/v1
                type: UniversityDegreeCredential
        challenge: 3182bdea-63d9-11ea-b6de-3b7c1404d57f
        domain: edu.example
        interact:
          service:
            - type: UnmediatedPresentationService2021
              serviceEndpoint: https://edu.example/workflows/123456/presentations
    VerifiablePresentationResponse:
      type: object
      properties:
        verifiablePresentation:
          $ref: "#/components/schemas/VerifiablePresentation"
    Issuer:
      type: object
      description: A JSON-LD Verifiable Credential Issuer.
      example:
        id: did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd
      oneOf:
        - type: string
        - type: object
          properties:
            id:
              type: string
    Credential:
      type: object
      properties:
        "@context":
          type: array
          description: The JSON-LD context of the credential.
          items:
            type: string
        id:
          type: string
          description: The ID of the credential.
        type:
          type: array
          description: The JSON-LD type of the credential.
          items:
            type: string
        issuer:
          $ref: "#/components/schemas/Issuer"
        issuanceDate:
          type: string
          description: The issuanceDate
        expirationDate:
          type: string
          description: The expirationDate
        credentialSubject:
          type: object
          description: The subject
      description: A JSON-LD Verifiable Credential without a proof.
      example:
        "@context":
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        id: http://example.gov/credentials/3732
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
        issuer: did:example:123
        issuanceDate: 2020-03-16T22:37:26.544Z
        credentialSubject:
          id: did:example:123
          degree:
            type: BachelorDegree
            name: Bachelor of Science and Arts
    LinkedDataProof:
      type: object
      properties:
        type:
          type: string
          description: Linked Data Signature Suite used to produce proof.
        created:
          type: string
          description: Date the proof was created.
        challenge:
          type: string
          description:
            A value chosen by the verifier to mitigate authentication proof
            replay attacks.
        domain:
          type: string
          description:
            The domain of the proof to restrict its use to a particular
            target.
        nonce:
          type: string
          description:
            A value chosen by the creator of a proof to randomize proof
            values for privacy purposes.
        verificationMethod:
          type: string
          description: Verification Method used to verify proof.
        proofPurpose:
          type: string
          description: The purpose of the proof to be used with verificationMethod.
        jws:
          type: string
          description: Detached JSON Web Signature.
        proofValue:
          type: string
          description: Value of the Linked Data proof.
      description: A JSON-LD Linked Data proof.
      example:
        type: Ed25519Signature2018
        created: 2020-04-02T18:28:08Z
        verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
        proofPurpose: assertionMethod
        jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    VerifiableCredential:
      type: object
      description: A JSON-LD Verifiable Credential with a proof.
      example:
        "@context":
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        id: http://example.gov/credentials/3732
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
        issuer: did:example:123
        issuanceDate: 2020-03-16T22:37:26.544Z
        credentialSubject:
          id: did:example:123
          degree:
            type: BachelorDegree
            name: Bachelor of Science and Arts
        proof:
          type: Ed25519Signature2018
          created: 2020-04-02T18:28:08Z
          verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
          proofPurpose: assertionMethod
          jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
      allOf:
        - $ref: "#/components/schemas/Credential"
        - type: object
          properties:
            proof:
              $ref: "#/components/schemas/LinkedDataProof"
    DeriveCredentialOptions:
      type: object
      properties:
        nonce:
          type: string
          description:
            An encoded nonce provided by the holder of the credential to
            be included into the LinkedDataProof.
      additionalProperties: false
      description: Options for specifying how the derived credential is created.
      example:
        nonce: lEixQKDQvRecCifKl789TQj+Ii6YWDLSwn3AxR0VpPJ1QV5htod/0VCchVf1zVM0y2E=
    Presentation:
      type: object
      properties:
        "@context":
          type: array
          description: The JSON-LD context of the presentation.
          items:
            type: string
        id:
          type: string
          description: The ID of the presentation.
        type:
          type: array
          description: The JSON-LD type of the presentation.
          items:
            type: string
        holder:
          type: object
          description:
            The holder - will be ignored if no proof is present since there
            is no proof of authority over the credentials
          nullable: true
        verifiableCredential:
          type: array
          description: The Verifiable Credentials
          items:
            $ref: "#/components/schemas/VerifiableCredential"
      description: A JSON-LD Verifiable Presentation without a proof.
      example:
        "@context":
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        holder: did:example:123
        type: VerifiablePresentation
        verifiableCredential:
          - "@context":
              - https://www.w3.org/2018/credentials/v1
              - https://www.w3.org/2018/credentials/examples/v1
          - id: http://example.gov/credentials/3732
          - type:
              - VerifiableCredential
              - UniversityDegreeCredential
          - issuer: did:example:123
          - issuanceDate: 2020-03-16T22:37:26.544Z
          - credentialSubject:
              id: did:example:123
              degree:
                type: BachelorDegree
                name: Bachelor of Science and Arts
          - proof:
              type: Ed25519Signature2018
              created: 2020-04-02T18:28:08Z
              verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
              proofPurpose: assertionMethod
              jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    VerifiablePresentation:
      type: object
      description: A JSON-LD Verifiable Presentation with a proof.
      example:
        "@context":
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        holder: did:example:123
        type: VerifiablePresentation
        verifiableCredential:
          - "@context":
              - https://www.w3.org/2018/credentials/v1
              - https://www.w3.org/2018/credentials/examples/v1
          - id: http://example.gov/credentials/3732
          - type:
              - VerifiableCredential
              - UniversityDegreeCredential
          - issuer: did:example:123
          - issuanceDate: 2020-03-16T22:37:26.544Z
          - credentialSubject:
              id: did:example:123
              degree:
                type: BachelorDegree
                name: Bachelor of Science and Arts
          - proof:
              type: Ed25519Signature2018
              created: 2020-04-02T18:28:08Z
              verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
              proofPurpose: assertionMethod
              jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
        proof:
          type: Ed25519Signature2018
          created: 2020-04-02T18:28:08Z
          verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
          proofPurpose: assertionMethod
          jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
      allOf:
        - $ref: "#/components/schemas/Presentation"
        - type: object
          properties:
            proof:
              $ref: "#/components/schemas/LinkedDataProof"
    PresentCredentialOptions:
      type: object
      properties:
        type:
          type: string
          description:
            The type of the proof. Default is an appropriate proof type
            corresponding to the verification method.
        verificationMethod:
          type: string
          description:
            "The URI of the verificationMethod used for the proof. If omitted,\
            \ a default verification method will be used."
        proofPurpose:
          type: string
          description: The purpose of the proof. Default 'assertionMethod'.
        created:
          type: string
          description:
            The date and time of the proof (with a maximum accuracy in
            seconds). Default current system time.
        challenge:
          type: string
          description:
            A challenge provided by the requesting party of the proof.
            For example 6e62f66e-67de-11eb-b490-ef3eeefa55f2
        domain:
          type: string
          description:
            The intended domain of validity for the proof. For example
            website.example
      additionalProperties: false
      description: Options for specifying how the LinkedDataProof is created.
      example:
        type: Ed25519Signature2018
        verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
        proofPurpose: assertionMethod
        created: 2020-04-02T18:48:36Z
        domain: example.com
        challenge: d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8
    IssueCredentialRequest:
      type: object
      properties:
        credential:
          $ref: "#/components/schemas/Credential"
        options:
          $ref: "#/components/schemas/IssueCredentialOptions"
    IssueCredentialResponse:
      type: object
      properties:
        verifiableCredential:
          $ref: "#/components/schemas/VerifiableCredential"
      example:
        verifiableCredential:
          "@context":
            - https://www.w3.org/2018/credentials/v1
            - https://www.w3.org/2018/credentials/examples/v1
          id: http://example.gov/credentials/3732
          type:
            - VerifiableCredential
            - UniversityDegreeCredential
          issuer: did:example:123
          issuanceDate: 2020-03-16T22:37:26.544Z
          credentialSubject:
            id: did:example:123
            degree:
              type: BachelorDegree
              name: Bachelor of Science and Arts
          proof:
            type: Ed25519Signature2018
            created: 2020-04-02T18:28:08Z
            verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
            proofPurpose: assertionMethod
            jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    UpdateCredentialStatus:
      type: object
      properties:
        credentialId:
          type: string
        credentialStatus:
          type: array
          items:
            $ref: "#/components/schemas/UpdateCredentialStatus_credentialStatus"
      description: Request for updating the status of an issued credential.
      example:
        credentialId: urn:uuid:45a44711-e457-4fa8-9b89-69fe0287c86a
        credentialStatus:
          - type: RevocationList2020Status
            status: "0"
    IssueCredentialOptions:
      type: object
      properties:
        created:
          type: string
          description:
            The date and time of the proof (with a maximum accuracy in
            seconds). Default current system time.
        challenge:
          type: string
          description:
            A challenge provided by the requesting party of the proof.
            For example 6e62f66e-67de-11eb-b490-ef3eeefa55f2
        domain:
          type: string
          description:
            The intended domain of validity for the proof. For example
            website.example
        credentialStatus:
          $ref: "#/components/schemas/IssueCredentialOptions_credentialStatus"
      additionalProperties: false
      description: Options for specifying how the LinkedDataProof is created.
      example:
        created: 2020-04-02T18:48:36Z
        credentialStatus:
          type: RevocationList2020Status
    VerifyCredentialRequest:
      type: object
      properties:
        verifiableCredential:
          $ref: "#/components/schemas/VerifiableCredential"
        options:
          $ref: "#/components/schemas/VerifyOptions"
    VerifyCredentialResponse:
      $ref: "#/components/schemas/VerificationResult"
    VerifyPresentationRequest:
      type: object
      properties:
        verifiablePresentation:
          $ref: "#/components/schemas/VerifiablePresentation"
        options:
          $ref: "#/components/schemas/VerifyOptions"
    ProoflessVerifyPresentationRequest:
      type: object
      properties:
        presentation:
          $ref: "#/components/schemas/Presentation"
    VerifyPresentationResponse:
      $ref: "#/components/schemas/VerificationResult"
    VerifyOptions:
      type: object
      properties:
        challenge:
          type: string
          description:
            A challenge provided by the requesting party of the proof.
            For example 6e62f66e-67de-11eb-b490-ef3eeefa55f2
        domain:
          type: string
          description:
            The intended domain of validity for the proof. For example
            website.example
      additionalProperties: false
      description: Options for specifying how the LinkedDataProof is verified.
      example:
        verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
        proofPurpose: assertionMethod
        created: 2020-04-02T18:48:36Z
        domain: example.com
        challenge: d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8
    VerificationResult:
      type: object
      properties:
        checks:
          type: array
          description: The checks performed
          items:
            type: string
        warnings:
          type: array
          description: Warnings
          items:
            type: string
        errors:
          type: array
          description: Errors
          items:
            type: string
      additionalProperties: false
      description: Object summarizing a verification
      example:
        checks:
          - proof
        warnings: []
        errors: []
    id:
      anyOf:
        - pattern: "[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}"
          type: string
        - pattern: "z[1-9A-HJ-NP-Za-km-z]{21,22}"
          type: string
        - pattern: "u[a-zA-Z0-9_-]{22,23}"
          type: string
    inline_response_200:
      oneOf:
        - $ref: "#/components/schemas/Credential"
        - $ref: "#/components/schemas/VerifiableCredential"
    inline_response_200_1:
      oneOf:
        - $ref: "#/components/schemas/Presentation"
        - $ref: "#/components/schemas/VerifiablePresentation"
    presentations_verify_body:
      oneOf:
        - $ref: "#/components/schemas/VerifyPresentationRequest"
        - $ref: "#/components/schemas/ProoflessVerifyPresentationRequest"
    NotifyPresentationAvailableRequest_query:
      type: object
      properties:
        type:
          type: string
          description: The type of query the server should reply with.
        credentialQuery:
          type: object
          description: Details of the client's available presentation
      description: See https://w3c-ccg.github.io/vp-request-spec/#format
    VerifiablePresentationRequest_query:
      type: object
      properties:
        type:
          type: array
          description: The type of the query.
          items:
            type: string
    VerifiablePresentationRequest_service:
      type: object
      properties:
        type:
          type: array
          description: The type of the service.
          items:
            type: string
        serviceEndpoint:
          type: string
          description:
            A URL that can be utilized for interacting with the service
            for the purposes of responding to the Verifiable Presentation Request.
      description:
        A service that is supported by the server that is capable of receiving
        a response to the Verifiable Presentation Request.
    VerifiablePresentationRequest_interact:
      type: object
      properties:
        service:
          $ref: "#/components/schemas/VerifiablePresentationRequest_service"
    UpdateCredentialStatus_credentialStatus:
      type: object
      properties:
        type:
          type: string
        status:
          type: string
    IssueCredentialOptions_credentialStatus:
      type: object
      properties:
        type:
          type: string
          description: The type of credential status to issue the credential with
      description:
        The method of credential status to issue the credential including.
        If omitted credential status will be included.
  parameters:
    ObjectId:
      name: id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        $ref: "#/components/schemas/id"
      example:
        - f37e5114-8b4a-11ec-b32e-fbd62b9502c1
        - z4Z1T4HdLdfXCFAhdhzdCqm
        - u7m8_ybOArX-EWeADqWCsIw
    TransactionId:
      name: transaction-id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        anyOf:
          - pattern: "[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}"
            type: string
          - pattern: "z[1-9A-HJ-NP-Za-km-z]{21,22}"
            type: string
          - pattern: "u[a-zA-Z0-9_-]{22,23}"
            type: string
      example:
        - f37e5114-8b4a-11ec-b32e-fbd62b9502c1
        - z4Z1T4HdLdfXCFAhdhzdCqm
        - u7m8_ybOArX-EWeADqWCsIw
x-tagGroups:
  - name: holder
    tags:
      - holder_Credentials
      - holder_Presentations
  - name: issuer
    tags:
      - issuer_Credentials
  - name: verifier
    tags:
      - verifier_Credentials
      - verifier_Presentations
